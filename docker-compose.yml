services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: arp_postgres
    environment:
      POSTGRES_DB: arp_db
      POSTGRES_USER: arp_user
      POSTGRES_PASSWORD: jibvy6-nivkyv-mewcAv
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - arp_network

  # FastAPI Backend
  backend:
    build:
      context: ./back
      dockerfile: Dockerfile
    container_name: arp_backend
    environment:
      - DATABASE_URL=postgresql://arp_user:jibvy6-nivkyv-mewcAv@postgres:5432/arp_db
      - SECRET_KEY=your-secret-key-change-in-production
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - API_V1_STR=/api/v1
      - PROJECT_NAME=ARP Backend
      - BACKEND_CORS_ORIGINS=["http://localhost:3000", "http://frontend:3000"]
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    networks:
      - arp_network
    volumes:
      - ./back:/app
      - /app/__pycache__
      - /app/.pytest_cache
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload --reload-dir /app

  # Next.js Frontend
  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    container_name: arp_frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_API_BASE=http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - arp_network
    volumes:
      - ./front:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev



volumes:
  postgres_data:

networks:
  arp_network:
    driver: bridge 